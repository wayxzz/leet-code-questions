/*
 *
 * 序列化二叉树的一种方法是使用前序遍历。当我们遇到一个非空节点时，我们可以记录这个节点的值。如果它是一个空节点，我们可以使用一个标记值，例如 #。
 * 
 * 
 *      _9_
 *     /   \
 *    3     2
 *   / \   / \
 *  4   1  #  6
 * / \ / \   / \
 * # # # #   # #
 * 
 * 
 * 例如，上面的二叉树可以被序列化为字符串&quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;，其中#代表一个空节点。
 * 
 * 给定一串以逗号分隔的值，验证它是否是正确的二叉树的前序序列化。想出一种在不重构树的情况下的可行算法。
 * 
 * 每个逗号分隔的字符串中的值肯定是一个整数或者一个表示null指针的&#39;#&#39;。
 * 
 * 你可以假定输入格式总是有效的，例如它永远不能包含两个连续的逗号，比如&quot;1,,3&quot;。
 * 
 * 示例 1:
 * &quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;
 * 返回&nbsp;true
 * 
 * 示例 2:
 * &quot;1,#&quot;
 * 返回&nbsp;false
 * 
 * 示例 3:
 * &quot;9,#,#,1&quot;
 * 返回&nbsp;false
 * 
 * 致谢:
 * 特别感谢&nbsp;@dietpepsi&nbsp;添加此问题并创建所有的测试用例。
 * 
 *
 */