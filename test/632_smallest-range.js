/*
 *
 * 你有&nbsp;k&nbsp;个升序排列的整数数组。找到一个最小区间，使得&nbsp;k&nbsp;个列表中的每个列表至少有一个数包含在其中。
 * 
 * 我们定义如果&nbsp;b-a &lt; d-c&nbsp;或者在&nbsp;b-a == d-c&nbsp;时&nbsp;a &lt; c，则区间 [a,b] 比 [c,d] 小。
 * 
 * 示例 1:
 * 
 * 
 * 输入:[[4,10,15,24,26], [0,9,12,20], [5,18,22,30]]
 * 输出: [20,24]
 * 解释: 
 * 列表 1：[4, 10, 15, 24, 26]，24 在区间 [20,24] 中。
 * 列表 2：[0, 9, 12, 20]，20 在区间 [20,24] 中。
 * 列表 3：[5, 18, 22, 30]，22 在区间 [20,24] 中。
 * 
 * 
 * 注意:
 * 
 * 
 * 	给定的列表可能包含重复元素，所以在这里升序表示 &gt;= 。
 * 	1 &lt;= k &lt;= 3500
 * 	-105 &lt;= 元素的值&nbsp;&lt;= 105
 * 	对于使用Java的用户，请注意传入类型已修改为List&lt;List&lt;Integer&gt;&gt;。重置代码模板后可以看到这项改动。
 * 
 * 
 *
 */